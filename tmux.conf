set-option -g prefix C-x
unbind-key C-x
bind-key C-x send-prefix

# 设置窗口标签的前景及背景色
 setw -g window-status-fg colour232
 setw -g window-status-bg default
 setw -g window-status-attr dim

# 设置当前窗口标签的前景及背景色
setw -g window-status-current-fg colour88
setw -g window-status-current-bg colour130
setw -g window-status-current-attr bright

# 设置窗口分割的边框颜色
set -g pane-border-fg colour189
set -g pane-border-bg black

# 设置当前窗口分割的边框颜色
 set -g pane-active-border-fg white
 set -g pane-active-border-bg colour208

# 设置提示信息的前景及背景色
set -g message-fg colour232
set -g message-bg colour23
set -g message-attr bright

# 窗口信息居中显示
set -g status-justify centre

# 监视窗口信息，如有内容变动，进行提示
setw -g monitor-activity on
set -g visual-activity on
set -g status-utf8 on

# 窗口号和窗口分割号都以1开始（默认从0开始）
set -g base-index 1
setw -g pane-base-index 1

# 支持鼠标选择窗口，调节窗口大小
setw -g mode-mouse on
set -g mouse-select-pane on
set -g mouse-resize-pane on
set -g mouse-select-window on
set -s escape-time 1

# 快捷键查看man
bind / command-prompt "split-window 'exec man %%'"
unbind "%"
unbind "\""
# 修改默认的窗口分割快捷键，使用更直观的符号
bind | split-window -h
bind - split-window -v
# 选择窗口功能修改为和Screen一样的C-a "
bind "\"" choose-window

# 选择窗口分割快捷键
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# 选择窗口快捷键
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+
# 调节窗口大小快捷键
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# 快捷调整窗口分割到全屏
unbind Up
bind Up new-window -d -n tmp \; swap-pane -s tmp.1 \; select-window -t tmp
unbind Down
bind Down last-window \; swap-pane -s tmp.1 \; kill-window -t tmp

setw -g mode-keys vi


set-option -g status on
set-option -g status-interval 2
set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
set-option -g status-left "#(~/virtualenv/src/tmux-powerline/powerline.sh left)"
set-option -g status-right "#(~/virtualenv/src/tmux-powerline/powerline.sh right)"
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy" \; display-message "Copied tmux buffer to system clipboard"
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"
